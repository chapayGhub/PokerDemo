<Window x:Class="PlayersDemoGui.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:PlayersDemoGui"
         Background="#ff303030"
        Title="PlayersDemoGui" >


    <Window.CommandBindings>
        <CommandBinding Command="{x:Static local:MainWindow.Run_RoutedCommand}" CanExecute="CanExecute_Run_Command" Executed="Executed_Run_Command" />
        <CommandBinding Command="{x:Static local:MainWindow.Prepare_RoutedCommand}" CanExecute="CanExecute_Prepare_Command" Executed="Executed_Prepare_Command" />
        <CommandBinding Command="{x:Static local:MainWindow.Cancel_RoutedCommand}" CanExecute="CanExecute_Cancel_Command" Executed="Executed_Cancel_Command" />
        <CommandBinding Command="{x:Static local:MainWindow.ToggleFullScreen_RoutedCommand}" CanExecute="CanExecute_ToggleFullScreen_Command" Executed="Executed_ToggleFullScreen_Command" />

        <CommandBinding Command="{x:Static local:MainWindow.Show_Page_RoutedCommand}" CanExecute="CanExecute_Show_Page_Command" Executed="Executed_Show_Page_Command" />

    </Window.CommandBindings>

    <Window.InputBindings>
        <KeyBinding Command="{x:Static local:MainWindow.ToggleFullScreen_RoutedCommand}" Gesture="F11" />
        <KeyBinding Command="{x:Static local:MainWindow.Run_RoutedCommand}" Gesture="F5" />

        <KeyBinding Command="{x:Static local:MainWindow.Cancel_RoutedCommand}" Gesture="CTRL+BREAK" />

        <KeyBinding Command="{x:Static local:MainWindow.Cancel_RoutedCommand}" Gesture="CTRL+C" />
    </Window.InputBindings>

    <Viewbox>

        <Grid Width="1366"  Height="768">

            <Grid.Resources>

                <BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter" />
                <local:InverseBooleanConverter x:Key="InverseBooleanConverter" />


  
                <Style x:Key="Link" TargetType="Button">
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="HorizontalAlignment" Value="Center"/>
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="FontSize" Value="16"/>
                    <Setter Property="Foreground" Value="#ffffffff"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <TextBlock TextDecorations="Underline" 
                                Text="{TemplateBinding Content}"
                                Background="{TemplateBinding Background}"/>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Foreground" Value="#80ffffff"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Foreground" Value="#20ffffff"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Foreground" Value="#10ffffff"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>


                <Style x:Key="ProgressBarStyle" TargetType="ProgressBar">

                    <Setter Property="Height" Value="20"/>
                    <Setter Property="Template">

                        <Setter.Value>
                            <ControlTemplate TargetType="ProgressBar">
                                <Border BorderBrush="#30000000" BorderThickness="1" CornerRadius="3" Padding="1">
                                    <Grid x:Name="PART_Track" >
                                        <Rectangle x:Name="PART_Indicator" HorizontalAlignment="Left" RadiusX="2" RadiusY="2">
                                            <Rectangle.Fill>
                                                <LinearGradientBrush  StartPoint="0,0" EndPoint="0,1">
                                                    <GradientStop Color="#FF0E960E" Offset="0"/>
                                                    <GradientStop Color="#FF108810" Offset="1"/>
                                                </LinearGradientBrush>
                                            </Rectangle.Fill>
                                        </Rectangle>
                                    </Grid>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>

                    </Setter>

                </Style>

                <Style x:Key="MyCustomStyleForSlider" TargetType="{x:Type Slider}">



                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Slider}">

                                <ControlTemplate.Resources>

                                    <Style x:Key="RepeatButtonStyle" TargetType="{x:Type RepeatButton}">
                                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                        <Setter Property="Background" Value="#90000000"/>
                                        <Setter Property="BorderBrush" Value="#40000000"/>
                                        <Setter Property="BorderThickness" Value="1"/>
                                        <Setter Property="Margin" Value="0"/>
                                        <Setter Property="Padding" Value="0"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                    <Border  SnapsToDevicePixels="True" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" >
                                                        <ContentPresenter  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />

                                                    </Border>

                                                    <ControlTemplate.Triggers>

                                                        <Trigger Property="IsMouseOver" Value="true">
                                                            <Setter Property="Background" Value="#20ffffff"   />
                                                        </Trigger>



                                                    </ControlTemplate.Triggers>



                                                </ControlTemplate>

                                            </Setter.Value>
                                        </Setter>



                                    </Style>


                                </ControlTemplate.Resources>

                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>

                                        <TickBar x:Name="TopTick" Visibility="Collapsed" Fill="{TemplateBinding Foreground}" Placement="Top" Height="4" Grid.Row="0"/>
                                        <TickBar x:Name="BottomTick" Visibility="Collapsed" Fill="{TemplateBinding Foreground}" Placement="Bottom" Height="4" Grid.Row="0"/>

                                        <Border x:Name="TrackBackground"   BorderThickness="1" CornerRadius="1"             Margin="5,0" VerticalAlignment="Center" Height="26" Grid.Row="1" >
                                            <Canvas Margin="-6,-1">
                                                <Rectangle Visibility="Hidden" x:Name="PART_SelectionRange" Height="4.0"  Fill="Red"  Stroke="Red"             StrokeThickness="1.0"/>
                                            </Canvas>
                                        </Border>

                                        <Track x:Name="PART_Track" Grid.Row="1">

                                            <Track.DecreaseRepeatButton>
                                                <RepeatButton Style="{DynamicResource RepeatButtonStyle}"  Command="{x:Static Slider.DecreaseLarge}">


                                                    <RepeatButton.Background>
                                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                            <!--<GradientStop Color="#FF53750D" Offset="0"/>
                                                        <GradientStop Color="#FF5F8510" Offset="1"/>-->
                                                            <GradientStop Color="#FF5A86D5" Offset="0"/>
                                                            <GradientStop Color="#FF6495ED" Offset="1"/>
                                                        </LinearGradientBrush>
                                                    </RepeatButton.Background>
                                                </RepeatButton>



                                            </Track.DecreaseRepeatButton>

                                            <Track.IncreaseRepeatButton>
                                                <RepeatButton Style="{DynamicResource RepeatButtonStyle}" Command="{x:Static Slider.IncreaseLarge}"/>
                                            </Track.IncreaseRepeatButton>

                                            <Track.Thumb>

                                                <Thumb  x:Name="Thumb" Width="15" >
                                                    <Thumb.Style>
                                                        <Style TargetType="{x:Type Thumb}">
                                                            <Style.Setters>
                                                                <Setter Property="Background" Value="#FFADADAD"/>
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type Thumb}">

                                                                            <Border CornerRadius="0" Background="{TemplateBinding Background}" BorderBrush="#FFC8C8C8" BorderThickness="0,0,0,0">

                                                                                <Border  Margin="0,3,0,3" Background="#40ffffff" BorderBrush="#50000000" Width="2" BorderThickness="1,0,0,0" />

                                                                            </Border>

                                                                            <ControlTemplate.Triggers>

                                                                                <Trigger Property="IsMouseOver" Value="true">
                                                                                    <Setter Property="Background" Value="#d0ffffff"   />
                                                                                </Trigger>


                                                                                <Trigger Property="IsEnabled" Value="false">
                                                                                    <Setter Property="Background" Value="#FF000000"   />
                                                                                    <Setter Property="Visibility" Value="Collapsed"   />
                                                                                </Trigger>

                                                                            </ControlTemplate.Triggers>





                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style.Setters>
                                                        </Style>
                                                    </Thumb.Style>
                                                </Thumb>

                                            </Track.Thumb>

                                        </Track>

                                    </Grid>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

                <Style TargetType="{x:Type Slider}" BasedOn="{StaticResource MyCustomStyleForSlider}"/>

                <SolidColorBrush x:Key="Button_Background_1"      Color="#00000000" />

                <LinearGradientBrush x:Key="Button_Background" StartPoint="0,0" EndPoint="0,1" >
                    <GradientStop Color="#50115290" Offset="0"/>
                    <GradientStop Color="#50115290" Offset="0.5"/>
                    <GradientStop Color="#60115290" Offset="1"/>
                </LinearGradientBrush>

                <RadialGradientBrush x:Key="Button_Background__" GradientOrigin="0.5,1" Center="0.5,0.5" RadiusX="1" RadiusY="2">
                    <RadialGradientBrush.GradientStops>
                        <GradientStop Color="#903d8bc3" Offset="0" />
                        <GradientStop Color="#90115290" Offset="1" />
                    </RadialGradientBrush.GradientStops>
                </RadialGradientBrush>


                <SolidColorBrush x:Key="Button_Foreground"      Color="#a0ffffff" />

                <!-- HeadsButtonStyle -->
                <Style x:Key="HeadsButtonBaseStyle" TargetType="{x:Type ButtonBase}">
                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                    <Setter Property="Foreground" Value="{DynamicResource Button_Foreground}"/>
                    <Setter Property="Background" Value="{DynamicResource Button_Background}"/>
                    <Setter Property="BorderBrush" Value="#20000000"/>
                    <Setter Property="BorderThickness" Value="3"/>
                    <Setter Property="Margin" Value="1"/>
                    <Setter Property="Padding" Value="10,8,10,8"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ButtonBase}">
                                <Border SnapsToDevicePixels="True" >

                                    <Grid>

                                        <Border CornerRadius="5" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" >

                                            <Grid>
                                                <Border CornerRadius="3" BorderBrush="#10ffffff" BorderThickness="0,1,0,0" />
                                                <Border CornerRadius="3" BorderBrush="#80000000" BorderThickness="1,0,1,1" />


                                                <Border CornerRadius="2" Padding="{TemplateBinding Padding}" >
                                                    <ContentPresenter  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
                                                </Border>

                                            </Grid>

                                        </Border>


                                        <Border x:Name="OverOverlay"  Visibility="Collapsed" Margin="3" CornerRadius="3" Background="#30ffffff"   />
                                        <Border x:Name="DownOverlay"  Visibility="Collapsed" CornerRadius="3" Background="#40000000"  BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
                                        <Border x:Name="FocusOverlay"  Visibility="Collapsed" CornerRadius="3"  BorderBrush="{DynamicResource Common_Border_Focus}" BorderThickness="{TemplateBinding BorderThickness}" />

                                    </Grid>

                                </Border>



                                <ControlTemplate.Triggers>

                                    <Trigger Property="IsKeyboardFocused" Value="true">
                                        <Setter Property="Visibility" Value="Visible" TargetName="FocusOverlay" />

                                    </Trigger>

                                    <Trigger Property="ButtonBase.IsPressed" Value="True">
                                        <Setter Property="Visibility" Value="Visible" TargetName="DownOverlay"  />
                                    </Trigger>

                                    <Trigger Property="ToggleButton.IsChecked" Value="True">
                                        <Setter Property="Visibility" Value="Visible" TargetName="DownOverlay"  />
                                    </Trigger>



                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Visibility" Value="Collapsed"   />

                                        <Setter Property="Background" Value="{DynamicResource Button_Background_Disabled}"   />
                                        <Setter Property="Foreground" Value="{DynamicResource Button_Foreground_Disabled}"  />
                                    </Trigger>

                                    <Trigger Property="IsMouseOver" Value="true">
                                        <!--
                                    <Setter Property="Background" Value="#ffffffff"   />
                                    <Setter Property="Foreground" Value="#ff000000"  />
                                    -->
                                        <Setter Property="Visibility" Value="Visible" TargetName="OverOverlay" />
                                    </Trigger>




                                </ControlTemplate.Triggers>



                            </ControlTemplate>

                        </Setter.Value>
                    </Setter>



                </Style>


                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource HeadsButtonBaseStyle}"/>



                <Style x:Key="IsEncoded_ToggleButton_Style" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource HeadsButtonBaseStyle}">

                    <Setter Property="Width" Value="130" />


                    <Setter Property="Content" Value="Show Encoded" />

                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ButtonBase}">
                                <Border SnapsToDevicePixels="True" >

                                    <Grid>

                                        <Border CornerRadius="5" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" >

                                            <Grid>
                                                <Border CornerRadius="3" BorderBrush="#10ffffff" BorderThickness="0,1,0,0" />
                                                <Border CornerRadius="3" BorderBrush="#80000000" BorderThickness="1,0,1,1" />


                                                <Border CornerRadius="2" Padding="{TemplateBinding Padding}" >
                                                    <ContentPresenter  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
                                                </Border>

                                            </Grid>

                                        </Border>


                                        <Border x:Name="OverOverlay"  Visibility="Collapsed" Margin="3" CornerRadius="3" Background="#30ffffff"   />
                                        <Border x:Name="DownOverlay"  Visibility="Collapsed" CornerRadius="3" Background="#40000000"  BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
                                        <Border x:Name="FocusOverlay"  Visibility="Collapsed" CornerRadius="3"  BorderBrush="{DynamicResource Common_Border_Focus}" BorderThickness="{TemplateBinding BorderThickness}" />

                                    </Grid>

                                </Border>



                                <ControlTemplate.Triggers>

                                    <Trigger Property="IsKeyboardFocused" Value="true">
                                        <Setter Property="Visibility" Value="Visible" TargetName="FocusOverlay" />

                                    </Trigger>

                                    <Trigger Property="ButtonBase.IsPressed" Value="True">
                                        <Setter Property="Visibility" Value="Visible" TargetName="DownOverlay"  />
                                    </Trigger>



                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Visibility" Value="Collapsed"   />

                                        <Setter Property="Background" Value="{DynamicResource Button_Background_Disabled}"   />
                                        <Setter Property="Foreground" Value="{DynamicResource Button_Foreground_Disabled}"  />
                                    </Trigger>

                                    <Trigger Property="IsMouseOver" Value="true">
                                        <!--
                                  <Setter Property="Background" Value="#ffffffff"   />
                                  <Setter Property="Foreground" Value="#ff000000"  />
                                  -->
                                        <Setter Property="Visibility" Value="Visible" TargetName="OverOverlay" />
                                    </Trigger>

                                </ControlTemplate.Triggers>



                            </ControlTemplate>

                        </Setter.Value>
                    </Setter>

                    <Style.Triggers>

                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Content" Value="Show Decoded" />

                        </Trigger>

                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Setter Property="Visibility" Value="Visible"   />
                        </Trigger>

                    </Style.Triggers>

                </Style>

                <Style x:Key="IsPaused_ToggleButton_Style" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource IsEncoded_ToggleButton_Style}">

                    <Setter Property="Width" Value="50" />
                    <Setter Property="Content" Value="||" />

                    <Style.Triggers>

                        <Trigger Property="IsChecked" Value="True">

                            <Setter Property="Content" Value=">" />

                        </Trigger>


                    </Style.Triggers>


                </Style>


            </Grid.Resources>


            <Grid>

                <Border x:Name="border_Demo_Page" TextElement.FontSize="20" TextElement.FontFamily="Segio"  >

                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <!--<Button Content="Fullscreen" HorizontalAlignment="Left" VerticalAlignment="Top" Command="{x:Static local:MainWindow.ToggleFullScreen_RoutedCommand}"  />-->

                        <!-- Header -->
                        <Border TextElement.Foreground="White" Margin="10,10,10,5" BorderBrush="#80ffffff" BorderThickness="0,0,0,0" CornerRadius="5">

                            <StackPanel Margin="0">

                                <Border BorderBrush="#30000000" BorderThickness="0" HorizontalAlignment="Center" CornerRadius="5" Padding="30,0,30,0">
                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                            <GradientStop Color="#80000000" Offset="0"/>
                                            <GradientStop Color="#80000000" Offset="0.5"/>
                                            <GradientStop Color="#80000000" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Border.Background>

                                    <StackPanel Orientation="Horizontal">


                                        <TextBlock Margin="5" TextAlignment="Center"  TextElement.FontSize="50" Text="Starcounter" TextWrapping="Wrap">
                                        </TextBlock>


                                        <!-- Win a Starcounter license! -->
                                        <TextBlock Margin="5" TextAlignment="Center" Foreground="#FFFFA500" TextElement.FontSize="50" Text="beats" TextWrapping="Wrap">
                              <TextBlock.Effect>
                                 <DropShadowEffect ShadowDepth="0"  Color="#FFFFA500"      BlurRadius="8"/>
                              </TextBlock.Effect>
                                        </TextBlock>

                                        <TextBlock Margin="5" TextAlignment="Center"  TextElement.FontSize="50" Text="OldSQL" TextWrapping="Wrap">
                                        </TextBlock>



                                    </StackPanel>



                                </Border>

                                <TextBlock TextElement.FontSize="20" Foreground="#80ffffff" Margin="5,10,5,5" TextAlignment="Center" Text="Benchmark Starcounter against Microsoft SQL Server 2012 Enterprise and Entity Framework using a simple poker player database." TextWrapping="Wrap"/>

                                <!-- Bullets -->
                                <StackPanel  Margin="5,5,5,0" TextElement.Foreground="White" Orientation="Horizontal" HorizontalAlignment="Center">

                                    <BulletDecorator>
                                        <BulletDecorator.Bullet>
                                            <Ellipse Fill="White" Width="8" Height="8"/>
                                        </BulletDecorator.Bullet>
                                        <TextBlock Margin="5,0,15,0" Text="Concurent (parallel) ACID transactions"/>
                                    </BulletDecorator>

                                    <BulletDecorator>
                                        <BulletDecorator.Bullet>
                                            <Ellipse Fill="White" Width="8" Height="8"/>
                                        </BulletDecorator.Bullet>
                                        <TextBlock Margin="5,0,15,0" Text="Snapshot isolation"/>
                                    </BulletDecorator>

                                    <BulletDecorator>
                                        <BulletDecorator.Bullet>
                                            <Ellipse Fill="White" Width="8" Height="8"/>
                                        </BulletDecorator.Bullet>
                                        <TextBlock Margin="5,0,15,0" Text="Single partition (Shared everything)"/>
                                    </BulletDecorator>

                                    <BulletDecorator>
                                        <BulletDecorator.Bullet>
                                            <Ellipse Fill="White" Width="8" Height="8"/>
                                        </BulletDecorator.Bullet>
                                        <TextBlock Margin="5,0,15,0" Text="Using C# ORM (Business Object Layer)"/>
                                    </BulletDecorator>
                                </StackPanel>

                            </StackPanel>
                        </Border>


                        <!-- Sliders -->
                        <Border TextElement.Foreground="#60ffffff" Grid.Row="1"  Margin="10,5,10,5" BorderBrush="#10ffffff" BorderThickness="1,1,0,0" CornerRadius="5">

                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <GradientStop Color="#202020" Offset="0"/>
                                    <GradientStop Color="#101010" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>

                            <Grid  Margin="5">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto" MinWidth="100"/>
                                </Grid.ColumnDefinitions>

                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <!--
                            <Border Grid.Row="1" Grid.ColumnSpan="3" Background="#05ffffff"/>
                            <Border Grid.Row="3" Grid.ColumnSpan="3" Background="#05ffffff"/>
                            <Border Grid.Row="5" Grid.ColumnSpan="3" Background="#05ffffff"/>
                        -->

                                <!-- INSERT Product -->
                                <TextBlock Margin="5" Grid.Row="0" Grid.Column="0" Text="Add Player" VerticalAlignment="Center"/>
                                <Slider IsEnabled="{Binding Path=IsRunning, Converter={StaticResource InverseBooleanConverter}}"  Margin="5" x:Name="slider1" Value="{Binding Slider_01}" Grid.Row="0" Grid.Column="1" Minimum="1000" Maximum="1000000" LargeChange="1000" SmallChange="1000" TickFrequency="100" IsSnapToTickEnabled="True"/>
                                <TextBlock Margin="5" TextAlignment="Right" Grid.Row="0" Grid.Column="2" Text="{Binding ElementName=slider1,Path=Value, StringFormat={}{0:#,0}}" VerticalAlignment="Center"/>

                                <!-- SELECT Product on Id -->
                                <TextBlock Margin="5" Grid.Row="1" Grid.Column="0" Text="Transfer Money Between Two Accounts" VerticalAlignment="Center"/>
                                <Slider IsEnabled="{Binding Path=IsRunning, Converter={StaticResource InverseBooleanConverter}}" Margin="5" x:Name="slider2" Value="{Binding Slider_02}" Grid.Row="1" Grid.Column="1" Minimum="0" Maximum="1000000" LargeChange="1000" SmallChange="1000" TickFrequency="100" IsSnapToTickEnabled="True"/>
                                <TextBlock Margin="5" TextAlignment="Right" Grid.Row="1" Grid.Column="2" Text="{Binding ElementName=slider2,Path=Value, StringFormat={}{0:#,0}}" VerticalAlignment="Center"/>

                                <!-- SELECT Product on Name -->
                                <TextBlock Margin="5" Grid.Row="2" Grid.Column="0" Text="Get Player And Accounts" VerticalAlignment="Center"/>
                                <Slider IsEnabled="{Binding Path=IsRunning, Converter={StaticResource InverseBooleanConverter}}" Margin="5" x:Name="slider3" Value="{Binding Slider_03}" Grid.Row="2" Grid.Column="1" Minimum="0" Maximum="1000000" LargeChange="1000" SmallChange="1000" TickFrequency="100" IsSnapToTickEnabled="True"/>
                                <TextBlock Margin="5" TextAlignment="Right" Grid.Row="2" Grid.Column="2" Text="{Binding ElementName=slider3,Path=Value, StringFormat={}{0:#,0}}" VerticalAlignment="Center"/>

                                <!-- UPDATE quantity of Product -->
                                <TextBlock Margin="5" Grid.Row="3" Grid.Column="0" Text="Deposit Money To Account" VerticalAlignment="Center"/>
                                <Slider IsEnabled="{Binding Path=IsRunning, Converter={StaticResource InverseBooleanConverter}}" Margin="5" x:Name="slider4" Value="{Binding Slider_04}"  Grid.Row="3" Grid.Column="1" Minimum="0" Maximum="1000000" LargeChange="1000" SmallChange="1000" TickFrequency="100" IsSnapToTickEnabled="True"/>
                                <TextBlock Margin="5" TextAlignment="Right" Grid.Row="3" Grid.Column="2" Text="{Binding ElementName=slider4,Path=Value, StringFormat={}{0:#,0}}" VerticalAlignment="Center"/>

                                <!-- Operations/transactions -->
                                <TextBlock Margin="5" Grid.Row="4" Grid.Column="0" Text="Get Player By Id" VerticalAlignment="Center"/>
                                <Slider IsEnabled="{Binding Path=IsRunning, Converter={StaticResource InverseBooleanConverter}}" Margin="5" x:Name="slider5" Value="{Binding Slider_05}"  Grid.Row="4" Grid.Column="1" Minimum="0" Maximum="1000000" LargeChange="1000" SmallChange="1000" TickFrequency="100" IsSnapToTickEnabled="True"/>
                                <TextBlock Margin="5" TextAlignment="Right" Grid.Row="4" Grid.Column="2" Text="{Binding ElementName=slider5,Path=Value, StringFormat={}{0:#,0}}" VerticalAlignment="Center"/>

                                <!-- Operations/transactions -->
                                <TextBlock Margin="5" Grid.Row="5" Grid.Column="0" Text="Get Player By FullName" VerticalAlignment="Center"/>
                                <Slider IsEnabled="{Binding Path=IsRunning, Converter={StaticResource InverseBooleanConverter}}" Margin="5" x:Name="slider6" Value="{Binding Slider_06}"  Grid.Row="5" Grid.Column="1" Minimum="0" Maximum="1000000" LargeChange="1000" SmallChange="1000" TickFrequency="100" IsSnapToTickEnabled="True"/>
                                <TextBlock Margin="5" TextAlignment="Right" Grid.Row="5" Grid.Column="2" Text="{Binding ElementName=slider6,Path=Value, StringFormat={}{0:#,0}}" VerticalAlignment="Center"/>


                            </Grid>

                        </Border>

                        <!-- Run/Cancel Buttons -->
                        <StackPanel Margin="5,5,5,5" Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Top">
                            <Button Margin="2.5" MinWidth="140" Background="#FF108810"  Content="Run" Command="{x:Static local:MainWindow.Run_RoutedCommand}" />
                            <Button Margin="2.5" MinWidth="140" Background="#FF851010" Content="Cancel" Command="{x:Static local:MainWindow.Cancel_RoutedCommand}"/>
                        </StackPanel>

                        <!-- Input, Vs, Output" -->
                        <Grid Grid.Row="3" Margin="10,5,10,5">


                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <!-- Input -->

                            <Border Height="{Binding ElementName=vs_box,Path=ActualHeight}" Padding="5" Grid.Row="1"  CornerRadius="5" BorderBrush="#10ffffff" BorderThickness="0,0,1,1">

                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Color="#A0000000" Offset="0"/>
                                        <GradientStop Color="#90000000" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.Background>


                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <TextBlock  Foreground="#80ffffff" Text="Recent outgoing request" Grid.Row="0" HorizontalAlignment="Center" Margin="2.5"/>

                                    <TextBox  x:Name="tb_input" Grid.Row="1" IsReadOnly="True"  TextElement.FontSize="15" TextWrapping="Wrap" TextElement.Foreground="#FF808080"  Background="Transparent" BorderThickness="0"/>
                                </Grid>

                            </Border>

                            <Grid x:Name="vs_box" Width="400" Grid.Column="1" Grid.Row="1">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <!-- Starcounter -->
                                <Border Grid.Row="0" Margin="10,0,10,5" Padding="10" BorderBrush="#60ffffff" CornerRadius="5" >
                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <GradientStop Color="#f0ffffff" Offset="0"/>
                                            <GradientStop Color="#c0ffffff" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                    <StackPanel Margin="0,0,0,10">
                                        <TextBlock Margin="2.5" Text="Starcounter"  TextAlignment="Center"/>
                                        <ProgressBar x:Name="starcounter_progress"  Minimum="0" Maximum="100" Margin="2.5"  Style="{DynamicResource ProgressBarStyle}" />

                                        <Grid TextElement.FontSize="15">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>

                                            <TextBlock Grid.Column="0" Margin="2.5" x:Name="tb_starcounter_transations" TextElement.FontSize="12" TextAlignment="Left"/>
                                            <TextBlock Grid.Column="1" Margin="2.5" Text="transactions in" TextElement.FontSize="12" TextAlignment="Center"/>
                                            <TextBlock Grid.Column="2" Margin="2.5" x:Name="tb_starcounter_time" TextElement.FontSize="12" Text="0:0.000" TextAlignment="Right"/>

                                        </Grid>



                                    </StackPanel>
                                </Border>

                                <!-- Microsoft SQL Server 2012 Enterprise -->
                                <Border Grid.Row="2" Margin="10,5,10,0" Padding="10" BorderBrush="#60ffffff" CornerRadius="5" >
                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <GradientStop Color="#f0ffffff" Offset="0"/>
                                            <GradientStop Color="#c0ffffff" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Border.Background>

                                    <StackPanel Margin="0,10,0,0">
                                        <TextBlock Margin="2.5" Text="Microsoft SQL Server 2012 Enterprise" TextAlignment="Center"/>
                                        <ProgressBar x:Name="mssql_progress"   Minimum="0" Maximum="100" Margin="2.5"  Style="{DynamicResource ProgressBarStyle}" />

                                        <Grid TextElement.FontSize="15">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>

                                            <TextBlock Grid.Column="0" Margin="2.5" x:Name="tb_mssql_transations" TextElement.FontSize="12" TextAlignment="Left"/>
                                            <TextBlock Grid.Column="1" Margin="2.5" Text="transactions in" TextElement.FontSize="12" TextAlignment="Center"/>
                                            <TextBlock Grid.Column="2" Margin="2.5" x:Name="tb_mssql_time" TextElement.FontSize="12" Text="0:0.000" TextAlignment="Right"/>

                                        </Grid>



                                    </StackPanel>
                                </Border>

                                <!-- vs -->
                                <Border Grid.Row="2" Background="#FF970E00" HorizontalAlignment="Center" VerticalAlignment="Center" Padding="15,4,15,4" CornerRadius="30" >

                                    <Border.RenderTransform>
                                        <TranslateTransform X="0" Y="-55"/>
                                    </Border.RenderTransform>

                                    <TextBlock FontWeight="Bold" TextBlock.FontSize="25"   Foreground="#ffffffff" Text="vs" TextAlignment="Center" />
                                </Border>


                            </Grid>


                            <!-- Output -->
                            <Border Height="{Binding ElementName=vs_box,Path=ActualHeight}"  Padding="5"  Grid.Column="2" Grid.Row="1"  CornerRadius="5" BorderBrush="#10ffffff" BorderThickness="0,0,1,1">

                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Color="#A0000000" Offset="0"/>
                                        <GradientStop Color="#90000000" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.Background>

                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>

                                    <TextBlock Foreground="#80ffffff" Text="Recent incoming response"  Grid.Column="2" Grid.Row="0" HorizontalAlignment="Center" Margin="2.5"/>

                                    <TextBox x:Name="tb_output"  Grid.Row="1" IsReadOnly="True" TextElement.FontSize="15" TextWrapping="Wrap" TextElement.Foreground="#FF808080" Background="Transparent" BorderThickness="0"/>
                                </Grid>
                            </Border>




                        </Grid>


                        <!-- Links / Score / Functions -->
                        <Grid Margin="5" Grid.Row="5" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <!--<StackPanel TextElement.FontSize="15" Orientation="Horizontal" VerticalAlignment="Bottom">
                            <Button Margin="2.5,0,2.5,0" Content="Demo" Style="{DynamicResource Link}"/>
                            <Button Margin="2.5,0,2.5,0" Content="Description" Style="{DynamicResource Link}"/>
                            <Button Margin="2.5,0,2.5,0" Content="Source" Style="{DynamicResource Link}"/>
                        </StackPanel>-->

                            <!-- Score -->
                            <Border Visibility="{Binding HasScore, Converter={StaticResource booleanToVisibilityConverter}}" Grid.Column="1" Margin="10,5,10,5" Padding="40,0,40,0" HorizontalAlignment="Center" VerticalAlignment="Top" CornerRadius="5">

                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                        <GradientStop Color="#80000000" Offset="0"/>
                                        <GradientStop Color="#80000000" Offset="0.5"/>
                                        <GradientStop Color="#80000000" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                    <TextBlock Margin="5"  Foreground="White" Text="Your score" VerticalAlignment="Center"/>
                                    <TextBlock Margin="5,5,5,0" FontSize="50" Foreground="Red" Text="{Binding Path=Score, StringFormat={}{0:0.###}}" VerticalAlignment="Center">
                          <TextBlock.Effect>
                             <DropShadowEffect ShadowDepth="0"  Color="Red"  Opacity="1"      BlurRadius="8"/>
                          </TextBlock.Effect>
                                    </TextBlock>
                                    <TextBlock Margin="5"  Foreground="White" Text="times faster" VerticalAlignment="Center" />
                                </StackPanel>

                            </Border>

                            <StackPanel TextElement.FontSize="15" Grid.Column="2" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Bottom">

                                <Button  FontSize="10"  Content="Delete old data/prepare random data" Command="{x:Static local:MainWindow.Prepare_RoutedCommand}"/>

                                <!--<StackPanel Orientation="Horizontal" Visibility="{Binding Path=IsPrepared, Converter={StaticResource booleanToVisibilityConverter}}">
                                    <TextBlock Foreground="White" Text="Preparing..." VerticalAlignment="Center" />
                                    <ContentPresenter  ContentTemplate="{StaticResource Wait_Template}" VerticalAlignment="Center" />
                                </StackPanel>-->

                                <ToggleButton IsChecked="{Binding IsEncoded}" Style="{DynamicResource IsEncoded_ToggleButton_Style}"  />
                                <ToggleButton IsChecked="{Binding IsPaused}" Padding="15,0,15,0" Style="{DynamicResource IsPaused_ToggleButton_Style}" />
                            </StackPanel>

                        </Grid>
                    </Grid>

                </Border>

                <!-- Description Page -->
                <Border x:Name="border_Description_Page" Visibility="Collapsed"  BorderBrush="#20000000" BorderThickness="0,0,0,1" Margin="0,0,0,30" >

                    <WebBrowser x:Name="webbrowser_description" />


                </Border>

                <!-- Source Page -->
                <Border x:Name="border_Source_Page" Visibility="Collapsed" BorderBrush="#20000000"  BorderThickness="0,0,0,1" Margin="0,0,0,30" >
                    <TabControl TabStripPlacement="Left" Margin="10" >

                        <TabItem >
                            <TabItem.Header>
                                <StackPanel Margin="5">
                                    <TextBlock Text="Starcounter"/>
                                </StackPanel>
                            </TabItem.Header>

                            <TabControl >
                                <TabItem Header="MainApp.cs">
                                    <WebBrowser x:Name="webbrowser_sourcestarcounter_1" />
                                </TabItem>
                                <TabItem Header="PlayerAndAccounts.json">
                                    <WebBrowser x:Name="webbrowser_sourcestarcounter_2" />
                                </TabItem>
                                <TabItem Header="PlayerAndAccounts.json.cs">
                                    <WebBrowser x:Name="webbrowser_sourcestarcounter_3" />
                                </TabItem>


                            </TabControl>

                        </TabItem>

                        <TabItem >
                            <TabItem.Header>
                                <StackPanel Margin="5">
                                    <TextBlock Text="Microsoft SQL"/>
                                    <TextBlock Text="Server 2012 Enterprise"/>
                                </StackPanel>
                            </TabItem.Header>

                            <TabControl >
                                <TabItem Header="MainApp.cs">
                                    <WebBrowser x:Name="webbrowser_sourcemssql_1" />
                                </TabItem>
                                <TabItem Header="PlayerAndAccounts.json">
                                    <WebBrowser x:Name="webbrowser_sourcemssql_2" />
                                </TabItem>
                                <TabItem Header="PlayerAndAccounts.json.cs">
                                    <WebBrowser x:Name="webbrowser_sourcemssql_3" />
                                </TabItem>
                            </TabControl>
                        </TabItem>

                    </TabControl>
                </Border>
                
     

                <!-- Links/Pages -->
                <Grid Margin="5" VerticalAlignment="Bottom" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <StackPanel TextElement.FontSize="15" Orientation="Horizontal" VerticalAlignment="Bottom">
                        <Button Margin="2.5,0,2.5,0" Content="Demo" Style="{DynamicResource Link}" Command="{x:Static local:MainWindow.Show_Page_RoutedCommand}" CommandParameter="Demo"/>
                        <Button Margin="2.5,0,2.5,0" Content="Description" Style="{DynamicResource Link}" Command="{x:Static local:MainWindow.Show_Page_RoutedCommand}" CommandParameter="Description"/>
                        <Button Margin="2.5,0,2.5,0" Content="Source" Style="{DynamicResource Link}" Command="{x:Static local:MainWindow.Show_Page_RoutedCommand}" CommandParameter="Source"/>
                    </StackPanel>



                </Grid>

            </Grid>



        </Grid>
    </Viewbox>

</Window>
